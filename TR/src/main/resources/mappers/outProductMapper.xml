<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.mappers.outProductMapper">
	<select id="getOutProductList"
		resultType="com.itwillbs.domain.OutProductDTO">
		SELECT o.outCode outCode, o.prodCode prodCode, o.outDate
		outDate, o.outEmpId
		outEmpId, o.outMemo outMemo,
		o.outRedate outRedate,
		o.outCount outCount, o.outPrice outPrice,
		o.sellCode sellCode,
		s.sellCount sellCount, s.sellDuedate sellDuedate,
		s.sellState
		sellState,
		s.clientCode clientCode, c.clientCompany clientCompany,
		p.prodName prodName, p.prodPrice prodPrice,
		stockTestTest.whseCount
		whseCount
		FROM outProduct o LEFT JOIN sellTestTest s
		ON o.sellCode =
		s.sellCode
		LEFT JOIN clients c
		ON s.clientCode = c.clientCode
		LEFT JOIN
		product p
		ON o.prodCode = p.prodCode
		LEFT JOIN stockTestTest
		ON
		o.prodCode =
		stockTestTest.prodCode
		ORDER BY o.outCode DESC
		LIMIT
		#{startRow},
		#{pageSize}
	</select>

	<select id="getOutProductListSearch"
		resultType="com.itwillbs.domain.OutProductDTO">
		SELECT o.outCode outCode, o.prodCode prodCode, o.outDate outDate,
		o.outEmpId outEmpId, o.outMemo outMemo,
		o.outRedate outRedate,
		o.outCount outCount, o.outPrice outPrice,
		o.sellCode sellCode,
		s.sellCount sellCount, s.sellDuedate sellDuedate,
		s.sellState
		sellState,
		s.clientCode clientCode, c.clientCompany clientCompany,
		p.prodName prodName, p.prodPrice prodPrice,
		stockTestTest.whseCount
		whseCount
		FROM outProduct o LEFT JOIN sellTestTest s
		ON o.sellCode =
		s.sellCode
		LEFT JOIN clients c
		ON s.clientCode = c.clientCode
		LEFT JOIN
		product p
		ON o.prodCode = p.prodCode
		LEFT JOIN stockTestTest
		ON
		o.prodCode =
		stockTestTest.prodCode
		<where>
			<if test="sellState == '검색'">
				<if test="outCode != ''">
					AND o.outCode like CONCAT('%', #{outCode}, '%')
				</if>

				<if test="prodName != ''">
					AND p.prodName like CONCAT('%', #{prodName}, '%')
				</if>

				<if test="clientCompany != ''">
					AND c.clientCompany like CONCAT('%', #{clientCompany},
					'%')
				</if>
			</if>
			<if test="sellState != '검색'">
				<if test="outCode != ''">
					AND o.outCode like CONCAT('%', #{outCode}, '%')
				</if>

				<if test="prodName != ''">
					AND p.prodName like CONCAT('%', #{prodName}, '%')
				</if>

				<if test="clientCompany != ''">
					AND c.clientCompany like CONCAT('%', #{clientCompany},
					'%')
				</if>

				<if test="sellState != ''">
					AND s.sellState like CONCAT('%', #{sellState}, '%')
				</if>
			</if>
		</where>

		ORDER BY o.outCode DESC
		LIMIT #{startRow}, #{pageSize}
	</select>

	<select id="getOutProductListAllSearch"
		resultType="com.itwillbs.domain.OutProductDTO">
		SELECT o.outCode outCode, o.prodCode prodCode, o.outDate outDate,
		o.outEmpId outEmpId, o.outMemo outMemo,
		o.outRedate outRedate,
		o.outCount outCount, o.outPrice outPrice,
		o.sellCode sellCode,
		s.sellCount sellCount, s.sellDuedate sellDuedate,
		s.sellState
		sellState,
		s.clientCode clientCode, c.clientCompany clientCompany,
		p.prodName prodName, p.prodPrice prodPrice,
		stockTestTest.whseCount
		whseCount
		FROM outProduct o LEFT JOIN sellTestTest s
		ON o.sellCode =
		s.sellCode
		LEFT JOIN clients c
		ON s.clientCode = c.clientCode
		LEFT JOIN
		product p
		ON o.prodCode = p.prodCode
		LEFT JOIN stockTestTest
		ON
		o.prodCode =
		stockTestTest.prodCode
		<where>
			<if test="outCode != ''">
				AND o.outCode like CONCAT('%', #{outCode}, '%')
			</if>

			<if test="prodName != ''">
				AND p.prodName like CONCAT('%', #{prodName}, '%')
			</if>

			<if test="clientCompany != ''">
				AND c.clientCompany like CONCAT('%', #{clientCompany},
				'%')
			</if>
		</where>

		ORDER BY o.outCode DESC
		LIMIT #{startRow}, #{pageSize}
	</select>

	<select id="getOutProductListCount" resultType="int">
		SELECT COUNT(*)
		FROM (
		SELECT o.outCode outCode, o.prodCode prodCode,
		DATE_FORMAT(o.outDate,
		'%Y-%m-d') outDate, o.outEmpId outEmpId,
		o.outMemo outMemo,
		DATE_FORMAT(o.outRedate , '%Y-%m-%d') outRedate,
		o.outCount outCount,
		o.outPrice outPrice,
		o.sellCode sellCode,
		s.sellCount sellCount, DATE_FORMAT(s.sellDuedate,
		'%Y-%m-%d')
		sellDuedate, s.sellState sellState,
		s.clientCode clientCode,
		c.clientCompany clientCompany,
		p.prodName prodName, p.prodPrice
		prodPrice,
		stockTestTest.whseCount whseCount
		FROM outProduct o LEFT JOIN
		sellTestTest s
		ON o.sellCode = s.sellCode
		LEFT JOIN clients c
		ON
		s.clientCode = c.clientCode
		LEFT JOIN product p
		ON o.prodCode =
		p.prodCode
		LEFT JOIN stockTestTest
		ON o.prodCode =
		stockTestTest.prodCode
		) AS subquery;
	</select>

	<select id="getOutProductListSearchCount" resultType="int">
		SELECT COUNT(*)
		FROM (
		SELECT o.outCode outCode, o.prodCode prodCode,
		DATE_FORMAT(o.outDate,
		'%Y-%m-d') outDate, o.outEmpId outEmpId,
		o.outMemo outMemo,
		DATE_FORMAT(o.outRedate , '%Y-%m-%d') outRedate,
		o.outCount outCount,
		o.outPrice outPrice,
		o.sellCode sellCode,
		s.sellCount sellCount, DATE_FORMAT(s.sellDuedate,
		'%Y-%m-%d')
		sellDuedate, s.sellState sellState,
		s.clientCode clientCode,
		c.clientCompany clientCompany,
		p.prodName prodName, p.prodPrice
		prodPrice,
		stockTestTest.whseCount whseCount
		FROM outProduct o LEFT JOIN
		sellTestTest s
		ON o.sellCode = s.sellCode
		LEFT JOIN clients c
		ON
		s.clientCode = c.clientCode
		LEFT JOIN product p
		ON o.prodCode =
		p.prodCode
		LEFT JOIN stockTestTest
		ON o.prodCode =
		stockTestTest.prodCode
		<where>

			<if test="sellState == '검색'">
				<if test="outCode != ''">
					AND o.outCode like CONCAT('%', #{outCode}, '%')
				</if>

				<if test="prodName != ''">
					AND p.prodName like CONCAT('%', #{prodName}, '%')
				</if>

				<if test="clientCompany != ''">
					AND c.clientCompany like CONCAT('%', #{clientCompany},
					'%')
				</if>
			</if>
			<if test="sellState != '검색'">
				<if test="outCode != ''">
					AND o.outCode like CONCAT('%', #{outCode}, '%')
				</if>

				<if test="prodName != ''">
					AND p.prodName like CONCAT('%', #{prodName}, '%')
				</if>

				<if test="clientCompany != ''">
					AND c.clientCompany like CONCAT('%', #{clientCompany},
					'%')
				</if>

				<if test="sellState != ''">
					AND s.sellState like CONCAT('%', #{sellState}, '%')
				</if>
			</if>
		</where>

		) AS subquery;
	</select>
	<select id="getOutProductListAllSearchCount" resultType="int">
		SELECT COUNT(*)
		FROM (
		SELECT o.outCode outCode, o.prodCode prodCode,
		DATE_FORMAT(o.outDate,
		'%Y-%m-d') outDate, o.outEmpId outEmpId,
		o.outMemo outMemo,
		DATE_FORMAT(o.outRedate , '%Y-%m-%d') outRedate,
		o.outCount outCount,
		o.outPrice outPrice,
		o.sellCode sellCode,
		s.sellCount sellCount, DATE_FORMAT(s.sellDuedate,
		'%Y-%m-%d')
		sellDuedate, s.sellState sellState,
		s.clientCode clientCode,
		c.clientCompany clientCompany,
		p.prodName prodName, p.prodPrice
		prodPrice,
		stockTestTest.whseCount whseCount
		FROM outProduct o LEFT JOIN
		sellTestTest s
		ON o.sellCode = s.sellCode
		LEFT JOIN clients c
		ON
		s.clientCode = c.clientCode
		LEFT JOIN product p
		ON o.prodCode =
		p.prodCode
		LEFT JOIN stockTestTest
		ON o.prodCode =
		stockTestTest.prodCode
		<where>
			<if test="outCode != ''">
				AND o.outCode like CONCAT('%', #{outCode}, '%')
			</if>

			<if test="prodName != ''">
				AND p.prodName like CONCAT('%', #{prodName}, '%')
			</if>

			<if test="clientCompany != ''">
				AND c.clientCompany like CONCAT('%', #{clientCompany},
				'%')
			</if>
		</where>
		) AS subquery;
	</select>



	<select id="outProductContent"
		resultType="com.itwillbs.domain.OutProductDTO">
		SELECT o.outCode outCode, o.prodCode prodCode, o.outDate
		outDate, o.outEmpId
		outEmpId, o.outMemo outMemo,
		o.outRedate outRedate,
		o.outCount outCount, o.outPrice outPrice,
		o.sellCode sellCode,
		s.sellCount sellCount, s.sellDuedate sellDuedate,
		s.sellState
		sellState,
		s.clientCode clientCode, c.clientCompany clientCompany,
		p.prodName prodName, p.prodPrice prodPrice,
		stockTestTest.whseCount
		whseCount
		FROM outProduct o LEFT JOIN sellTestTest s
		ON o.sellCode =
		s.sellCode
		LEFT JOIN clients c
		ON s.clientCode = c.clientCode
		LEFT JOIN
		product p
		ON o.prodCode = p.prodCode
		LEFT JOIN stockTestTest
		ON
		o.prodCode =
		stockTestTest.prodCode
		WHERE outCode = #{outCode}
	</select>

	<update id="updateSellState">
		UPDATE sellTestTest
		SET sellState = #{sellState}
		WHERE
		sellCode = #{sellCode}
	</update>

	<update id="updateOutDate">
		UPDATE outProduct
		SET outDate = #{outDate}
		WHERE
		outCode = #{outCode}
	</update>

	<update id="updateOutRedate">
		UPDATE outProduct
		SET outRedate = #{outRedate}
		WHERE
		outCode = #{outCode}
	</update>

	<update id="updateWhseCount">
		UPDATE stockTestTest
		SET whseCount = #{whseCount} -
		#{outCount}
		WHERE prodCode = #{prodCode}
	</update>

	<update id="updateOutProductContent">
		UPDATE outProduct
		SET outCount = #{outCount}, outMemo
		= #{outMemo}
		WHERE outCode = #{outCode}
	</update>

	<select id="getMaxNum" resultType="java.lang.Integer">
		SELECT
		MAX(CAST(SUBSTRING(outCode, 3) AS SIGNED)) AS max_num
		FROM outProduct
		WHERE outCode LIKE CONCAT(#{code},'%')

	</select>

	<select id="getProdPrice" resultType="int">
		SELECT prodPrice
		FROM
		product
		WHERE prodCode = #{prodCode}
	</select>

	<insert id="insertList">
		INSERT INTO outProduct(outCode, prodCode, outPrice,
		sellCode)
		VALUES (#{outCode}, #{prodCode}, #{outPrice}, #{sellCode})
	</insert>
</mapper>