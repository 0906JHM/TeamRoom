<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.mappers.outProductMapper">
	<select id="getOutProductList"
		resultType="com.itwillbs.domain.OutProductDTO">
		SELECT o.outCode outCode, o.prodCode prodCode, o.outDate
		outDate, o.outEmpId
		outEmpId, o.outMemo outMemo,
		o.outRedate outRedate,
		o.outCount outCount, o.outPrice outPrice,
		o.sellCode sellCode,
		s.sellCount sellCount, s.sellDuedate sellDuedate,
		s.sellState
		sellState,
		s.clientCode clientCode, c.clientCompany clientCompany,
		p.prodName prodName, p.prodPrice prodPrice,
		stockTestTest.whseCount
		whseCount
		FROM outProduct o JOIN sellTestTest s
		ON o.sellCode =
		s.sellCode
		JOIN clients c
		ON s.clientCode = c.clientCode
		JOIN product p
		ON o.prodCode = p.prodCode
		JOIN stockTestTest
		ON o.prodCode =
		stockTestTest.prodCode
	</select>

	<select id="getOutProductListSearch"
		resultType="com.itwillbs.domain.OutProductDTO">
		SELECT o.outCode outCode, o.prodCode prodCode, o.outDate outDate,
		o.outEmpId outEmpId, o.outMemo outMemo,
		o.outRedate outRedate,
		o.outCount outCount, o.outPrice outPrice,
		o.sellCode sellCode,
		s.sellCount sellCount, s.sellDuedate sellDuedate,
		s.sellState
		sellState,
		s.clientCode clientCode, c.clientCompany clientCompany,
		p.prodName prodName, p.prodPrice prodPrice,
		stockTestTest.whseCount
		whseCount
		FROM outProduct o JOIN sellTestTest s
		ON o.sellCode =
		s.sellCode
		JOIN clients c
		ON s.clientCode = c.clientCode
		JOIN product p
		ON o.prodCode = p.prodCode
		JOIN stockTestTest
		ON o.prodCode =
		stockTestTest.prodCode
		WHERE
		<choose>
			<!-- 1. 모든 컬럼을 고려한 경우 -->
			<when
				test="outCode != null and prodName != null and clientCompany != null and sellState != null">
				o.outCode LIKE CONCAT('%', #{outCode}, '%')
				AND p.prodName LIKE CONCAT('%', #{prodName}, '%')
				AND c.clientCompany LIKE CONCAT('%', #{clientCompany}, '%')
				AND s.sellState = #{sellState}
			</when>

			<!-- 2. outCode, prodName, clientCompany 컬럼을 고려한 경우 -->
			<when
				test="outCode != null and prodName != null and clientCompany != null">
				o.outCode LIKE CONCAT('%', #{outCode}, '%')
				AND p.prodName LIKE CONCAT('%', #{prodName}, '%')
				AND c.clientCompany LIKE CONCAT('%', #{clientCompany}, '%')
			</when>

			<!-- 3. outCode, prodName, sellState 컬럼을 고려한 경우 -->
			<when
				test="outCode != null and prodName != null and sellState != null">
				o.outCode LIKE CONCAT('%', #{outCode}, '%')
				AND p.prodName LIKE CONCAT('%', #{prodName}, '%')
				AND s.sellState = #{sellState}
			</when>

			<!-- 4. prodName, clientCompany, sellState 컬럼을 고려한 경우 -->
			<when
				test="prodName != null and clientCompany != null and sellState != null">
				p.prodName LIKE CONCAT('%', #{prodName}, '%')
				AND c.clientCompany LIKE CONCAT('%', #{clientCompany}, '%')
				AND s.sellState = #{sellState}
			</when>

			<!-- 5. outCode, prodName 컬럼을 고려한 경우 -->
			<when test="outCode != null and prodName != null">
				o.outCode LIKE CONCAT('%', #{outCode}, '%')
				AND p.prodName LIKE CONCAT('%', #{prodName}, '%')
			</when>

			<!-- 6. outCode, clientCompany 컬럼을 고려한 경우 -->
			<when test="outCode != null and clientCompany != null">
				o.outCode LIKE CONCAT('%', #{outCode}, '%')
				AND c.clientCompany LIKE CONCAT('%', #{clientCompany}, '%')
			</when>

			<!-- 7. outCode, sellState 컬럼을 고려한 경우 -->
			<when test="outCode != null and sellState != null">
				o.outCode LIKE CONCAT('%', #{outCode}, '%')
				AND s.sellState = #{sellState}
			</when>

			<!-- 8. prodName, clientCompany 컬럼을 고려한 경우 -->
			<when test="prodName != null and clientCompany != null">
				p.prodName LIKE CONCAT('%', #{prodName}, '%')
				AND c.clientCompany LIKE CONCAT('%', #{clientCompany}, '%')
			</when>

			<!-- 9. prodName, sellState 컬럼을 고려한 경우 -->
			<when test="prodName != null and sellState != null">
				p.prodName LIKE CONCAT('%', #{prodName}, '%')
				AND s.sellState = #{sellState}
			</when>

			<!-- 10. clientCompany, sellState 컬럼을 고려한 경우 -->
			<when test="clientCompany != null and sellState != null">
				c.clientCompany LIKE CONCAT('%', #{clientCompany}, '%')
				AND s.sellState = #{sellState}
			</when>

			<!-- 11. outCode 컬럼을 고려한 경우 -->
			<when test="outCode != null">
				o.outCode LIKE CONCAT('%', #{outCode}, '%')
			</when>

			<!-- 12. prodName 컬럼을 고려한 경우 -->
			<when test="prodName != null">
				p.prodName LIKE CONCAT('%', #{prodName}, '%')
			</when>

			<!-- 13. clientCompany 컬럼을 고려한 경우 -->
			<when test="clientCompany != null">
				c.clientCompany LIKE CONCAT('%', #{clientCompany}, '%')
			</when>

			<!-- 14. sellState 컬럼을 고려한 경우 -->
			<when test="sellState != null">
				s.sellState = #{sellState}
			</when>

			<!-- 15. 어떠한 조건도 없는 경우 -->
			<otherwise>
				1=1
			</otherwise>
		</choose>

	</select>

</mapper>