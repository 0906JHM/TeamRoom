<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.mappers.inMaterialMapper">

	<select id="getInMaterialList"
		resultType="com.itwillbs.domain.InMaterialDTO">

		SELECT i.inNum, i.buyNum, r.whseCode, c.clientCompany,
		i.rawCode, r.rawName, i.inCount, s.stockCount,
		r.rawPrice, i.inPrice,
		i.inDate, i.inEmpId, i.inState
		FROM inMaterial
		i left join rawMaterial
		r
		on i.rawCode = r.rawCode
		left join stock s
		on
		i.rawCode = s.rawCode
		left join clients c
		on i.clientCode = c.clientCode
		order by i.inNum desc
		limit #{startRow}, #{pageSize}

	</select>

	<select id="getInMaterialListCount" resultType="int">
		SELECT COUNT(*)
		FROM (
		SELECT i.inNum, i.buyNum, r.whseCode, c.clientCompany,
		i.rawCode, r.rawName, i.inCount, s.stockCount,
		r.rawPrice, i.inPrice,
		i.inDate,i.inEmpId, i.inState
		FROM inMaterial i
		left join rawMaterial r
		on i.rawCode = r.rawCode
		left join stock s
		on
		i.rawCode = s.rawCode
		left join clients c
		on i.clientCode = c.clientCode
		) AS subquery
	</select>

	<select id="getInMaterialListSearch"
		resultType="com.itwillbs.domain.InMaterialDTO">
		SELECT i.inNum, i.buyNum, r.whseCode, c.clientCompany,
		i.rawCode,
		r.rawName, i.inCount, s.stockCount,
		r.rawPrice, i.inPrice,
		i.inDate,
		i.inEmpId, i.inState
		FROM inMaterial i
		left join rawMaterial r
		on
		i.rawCode = r.rawCode
		left join stock s
		on
		i.rawCode = s.rawCode
		left
		join clients c
		on i.clientCode = c.clientCode
		<where>
			<if test="inState == '검색'">
				<if test="inNum != ''">
					i.inNum LIKE CONCAT('%', #{inNum}, '%')
				</if>

				<if test="rawName != ''">
					AND r.rawName LIKE CONCAT('%', #{rawName}, '%')
				</if>

				<if test="clientCompany != ''">
					AND c.clientCompany LIKE CONCAT('%', #{clientCompany},
					'%')
				</if>
			</if>
			<if test="inState != '검색'">
				<if test="inNum != ''">
					i.inNum LIKE CONCAT('%', #{inNum}, '%')
				</if>

				<if test="rawName != ''">
					AND r.rawName LIKE CONCAT('%', #{rawName}, '%')
				</if>

				<if test="clientCompany != ''">
					AND c.clientCompany LIKE CONCAT('%', #{clientCompany},
					'%')
				</if>
				<if test="inState != ''">
					AND i.inState LIKE CONCAT('%', #{inState}, '%')
				</if>
			</if>
		</where>

		ORDER BY i.inNum DESC
		LIMIT #{startRow}, #{pageSize}

	</select>


	<select id="getInMaterialListSearchCount" resultType="int">
		SELECT count(*)
		FROM (
		SELECT i.inNum, i.buyNum, r.whseCode,
		c.clientCompany,
		i.rawCode,
		r.rawName,
		i.inCount, s.stockCount,
		r.rawPrice, i.inPrice, i.inDate,
		i.inEmpId,
		i.inState
		FROM inMaterial i left join rawMaterial r
		on
		i.rawCode =
		r.rawCode
		left join stock s
		on i.rawCode = s.rawCode
		left
		join clients c
		on i.clientCode = c.clientCode
		<where>
			<if test="inState == '검색'">
				<if test="inNum != ''">
					i.inNum LIKE CONCAT('%', #{inNum}, '%')
				</if>

				<if test="rawName != ''">
					AND r.rawName LIKE CONCAT('%', #{rawName}, '%')
				</if>

				<if test="clientCompany != ''">
					AND c.clientCompany LIKE CONCAT('%', #{clientCompany},
					'%')
				</if>
			</if>
			<if test="inState != '검색'">
				<if test="inNum != ''">
					i.inNum LIKE CONCAT('%', #{inNum}, '%')
				</if>

				<if test="rawName != ''">
					AND r.rawName LIKE CONCAT('%', #{rawName}, '%')
				</if>

				<if test="clientCompany != ''">
					AND c.clientCompany LIKE CONCAT('%', #{clientCompany},
					'%')
				</if>
				<if test="inState != ''">
					AND i.inState LIKE CONCAT('%', #{inState}, '%')
				</if>
			</if>
		</where>
		) AS subquery

	</select>

	<select id="getInMaterialListAllSearch"
		resultType="com.itwillbs.domain.InMaterialDTO">
		SELECT i.inNum, i.buyNum, r.whseCode, c.clientCompany,
		i.rawCode,
		r.rawName, i.inCount, s.stockCount,
		r.rawPrice, i.inPrice,
		i.inDate,
		i.inEmpId, i.inState
		FROM inMaterial i
		left join rawMaterial r
		on
		i.rawCode = r.rawCode
		left join stock s
		on
		i.rawCode = s.rawCode
		left
		join clients c
		on i.clientCode = c.clientCode
		<where>
			<if test="inNum != ''">
				i.inNum LIKE CONCAT('%', #{inNum}, '%')
			</if>

			<if test="rawName != ''">
				AND r.rawName LIKE CONCAT('%', #{rawName}, '%')
			</if>

			<if test="clientCompany != ''">
				AND c.clientCompany LIKE CONCAT('%', #{clientCompany},
				'%')
			</if>
		</where>

		ORDER BY i.inNum DESC
		LIMIT #{startRow}, #{pageSize}

	</select>

	<select id="getInMaterialListAllSearchCount" resultType="int">
		SELECT count(*)
		FROM (
		SELECT i.inNum, i.buyNum, r.whseCode,
		c.clientCompany,
		i.rawCode,
		r.rawName,
		i.inCount, s.stockCount,
		r.rawPrice, i.inPrice, i.inDate,
		i.inEmpId,
		i.inState
		FROM inMaterial i left join rawMaterial r
		on
		i.rawCode =
		r.rawCode
		left join stock s
		on i.rawCode = s.rawCode
		left
		join clients c
		on i.clientCode = c.clientCode
		<where>
			<if test="inNum != ''">
				i.inNum LIKE CONCAT('%', #{inNum}, '%')
			</if>

			<if test="rawName != ''">
				AND r.rawName LIKE CONCAT('%', #{rawName}, '%')
			</if>

			<if test="clientCompany != ''">
				AND c.clientCompany LIKE CONCAT('%', #{clientCompany},
				'%')
			</if>
		</where>
		) AS subquery

	</select>


	<select id="getMaxNum" resultType="java.lang.Integer">
		SELECT
		MAX(CAST(SUBSTRING(inNum, 3) AS SIGNED)) AS max_num
		FROM inMaterial
		WHERE inNum LIKE CONCAT(#{code}, '%')
	</select>

	<insert id="insertList">
		INSERT INTO inMaterial
		VALUES (#{inNum}, default,
		#{inCount}, #{rawCode},#{buyNum}, default, #{clientCode}, default,
		#{inState}, #{inPrice})
	</insert>

	<select id="inMaterialContent"
		resultType="com.itwillbs.domain.InMaterialDTO">
		SELECT i.inNum, i.buyNum, r.whseCode, c.clientCompany,
		i.rawCode,
		r.rawName, i.inCount, s.stockCount,
		r.rawPrice, i.inPrice,
		i.inDate,
		i.inEmpId, i.inState
		FROM inMaterial i
		left join rawMaterial r
		on
		i.rawCode = r.rawCode
		left join stock s
		on
		i.rawCode = s.rawCode
		left
		join clients c
		on i.clientCode = c.clientCode
		where inNum = #{inNum}
	</select>

	<update id="updateWhseCount">
		update stock
		SET stockCount = stockCount + #{inCount}
		WHERE rawCode = #{rawCode}
	</update>


	<update id="updateInState">
		update inMaterial
		SET inState = "입고완료"
		WHERE inNum =
		#{inNum}
	</update>
	
	<update id="updateInDate">
		update inMaterial
		SET inDate = #{inDate}
		WHERE inNum =
		#{inNum}
	</update>

</mapper>